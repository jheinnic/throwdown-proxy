import {IntArrayModel, IntArrayModelAdapter, IntArrayModelGenConfig} from './hash-model-adapter.class';
import {TaskLoader} from './task-loader.class';
import {CanvasPlotter} from './canvas-plotter.service';
import {CanvasWriter} from './canvas-writer.class';
import {CanvasProvider} from './canvas-provider.service';
import {RandomArtGenerator} from './random-art-generator.service';

import {ITaskContentAdapter} from './task-content-adapter.interface';
import {ImageDimensions} from './image-dimensions.interface';

const imageDimensions: ImageDimensions = {
  pixelWidth: 960,
  pixelHeight: 540,
  fitOrFill: 'fit'
};
const intArrayModelGenConfig: IntArrayModelGenConfig = {
  prefixCount: 4,
  prefixLength: 10,
  suffixCount: 5,
  suffixLength: 6,
  termRange: 255,
  firstGeneration: 110
};
const maxBatchSize = 33000;
const outputRootDir = '/Users/jheinnic/Documents/randomArt3';

const myContentAdapter: ITaskContentAdapter<IntArrayModel> =
  new IntArrayModelAdapter(imageDimensions, intArrayModelGenConfig);

const myTaskLoader = new TaskLoader<IntArrayModel>(myContentAdapter, maxBatchSize);
// 896, 896, 65500, 'square'
// 120, 120, 50000, 'square'

const myCanvasProvider = new CanvasProvider();
const myCanvasPlotter = new CanvasPlotter();
const myCanvasWriter = new CanvasWriter(outputRootDir);
const facade =
  new RandomArtGenerator(myCanvasProvider, myTaskLoader, myCanvasPlotter, myCanvasWriter);

facade.launchCanvas();
